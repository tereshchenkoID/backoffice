---
title: Backofice
lang: en
---
extends layouts/_layout

block content
  main.main
    .paper.paper--wide.u-mb-24
      .paper__headline
        h5 Tickets search
        +select('Rows', [
          {
            value: 20,
            text: '20',
          },
          {
            value: 50,
            text: '50'
          },
          {
            value: 100,
            text: '100'
          }
        ])(name="quantity")

      hr.paper__hr
      .paper__body
        form.paper__form.js-form-tickets
          .paper__row.paper__row--4
            +field('Ticket')(type="text" name="ticket")
            +field('Username')(type="text" name="username")
            +select('State', [
              {
                value: 0,
                text: 'Any',
                selected: true,
              },
              {
                value: 1,
                text: 'Confirmed'
              },
              {
                value: 2,
                text: 'Finalized'
              },
              {
                value: 3,
                text: 'Cancelled'
              },
              {
                value: 4,
                text: 'Unconfirmed'
              },
            ])(name="state")

            +select('Player Type', [
              {
                value: 0,
                text: 'Any',
                selected: true,
              },
              {
                value: 1,
                text: 'Shop'
              },
              {
                value: 2,
                text: 'Web'
              },
            ])(name="type")
          .paper__row.paper__row--4
            +field('Date from')(type="datetime-local" name="date-from")
            +field('Date to')(type="datetime-local" name="date-to")
            +field('Amount from')(type="number" name="amount-from")
            +field('Amount to')(type="number" name="amount-to")
          .paper__row.paper__row--4
            +select('Currency', [])(name="currency").js-select-currency
            +field('Payout from')(type="number" name="payout-from")
            +field('Payout to')(type="number" name="payout-to")
          .paper__block.u-text-right
            +button('Search')(type="submit").button--primary
            +button('Cancel')(type="reset").button--default.u-ml-16

    .paper.paper--wide
      .paper__body
        .paper__form
          +pagination.pagination--top.js-pagination
          .table.js-table.js-table-tickets
          +pagination.pagination--bottom.js-pagination

block script
  script.
    loader()

    let config = [
      {
        actions: 'dropdown'
      },
      {
        key: 'ticketId',
        text: 'Ticket ID'
      },
      {
        key: 'username',
        text: 'Shop'
      },
      {
        key: 'game',
        text: 'Game Details'
      },
      {
        key: 'status',
        text: 'Status'
      },
      {
        key: 'currency',
        text: 'Currency'
      },
      {
        key: 'payout',
        text: 'Payout'
      },
      {
        key: 'stake',
        text: 'Sum of Stakes'
      },
      {
        key: 'bookTime',
        text: 'Finalized'
      },
      {
        actions: 'cancel,print,calculate'
      }
    ]

    let config_2 = [
      {
        key: 'group',
        text: 'GR'
      },
      {
        key: 'combi',
        text: 'Combi'
      },
      {
        key: 'amount',
        text: 'Stake',
        fixed: true
      },
      {
        key: 'minwin',
        text: 'Pot. Min win',
        // replace: 'currency',
        fixed: true
      },
      {
        key: 'maxwin',
        text: 'Pot. MAX win',
        // replace: 'currency',
        fixed: true
      },
      {
        key: 'bonus',
        text: 'Bonus'
      }
    ]

    let config_3 = [
      {
        key: 'details.game',
        text: 'Game'
      },
      {
        key: 'details.eventId',
        text: 'Event'
      },
      {
        key: 'market',
        text: 'Type'
      },
      {
        key: 'selection',
        text: 'Pick'
      },
      {
        key: 'odds',
        text: 'Odds'
      },
      {
        key: 'details.results',
        text: 'Results'
      },
      {
        key: 'status',
        text: 'State'
      }
    ]

    $('.js-table-tickets .js-table-wrapper').html(table.emptyHTML)

    $('[name="date-from"]').val('2020-10-29T00:00')
    // $('[name="date-from"]').val(base.getDate(new Date().setHours(0, 0, 0, 0), 'datetime-local'))
    $('[name="date-to"]').val(base.getDate(new Date(), 'datetime-local'))
    $('[name="quantity"]').val(table.navigation.quantity)

    base.initDynamicSelect('currencies/', $('.js-select-currency'))

    loader()

    const handleSubmit = (action = null) => {
      let page = 0
      const formData = new FormData();

      $('.paper').find('[name]').each(function () {
        const val = $(this).val()
        const name = $(this).attr('name')

        if (val !== '' && val !== '-1') {
          formData.append(name, val)
        }
      });

      if (action === 'next') {
        page = table.navigation.current <= table.navigation.pages ? table.navigation.current + 1 : table.navigation.pages
      }
      else if (action === 'prev') {
        page = table.navigation.current > 0 ? table.navigation.current - 1 : 0
      }
      else if (action === 'start') {
        page = 0
      }
      else if (action === 'end') {
        page = table.navigation.pages
      }

      formData.append('page', page)

      base.sendFormData(
        formData,
        `${base.base}/tickets/`,
        'POST',
        (response) => {
          if (response) {

            if (response.data) {
              table.navigation.all = response.results
              table.navigation.pages = Math.floor(response.results / table.navigation.quantity)
              table.navigation.current = page
              table.updateNavigation(1)

              table.drawHTML($('.js-table-tickets'), config, response.data)

              $('.js-table-tickets [data-cell="status"]').each(function() {
                $(this).attr('data-value', $(this).html())
                $(this).html(SETTINGS.TICKET_STATUSES[$(this).html()])
              })
            }
            else {
              table.navigation.all = 0
              table.navigation.pages = 0
              table.navigation.current = 0
              table.updateNavigation(0)

              table.drawHTML($('.js-table-tickets'), config, [])
            }
          }
        },
        null,
        {
          async: false
        }
      )
    }

    // table.drawHTML($('.js-table-tickets'), config, [])

    handleSubmit()

    const actionDropdown = ($el, $id, $row) => {
      const $calculate = $row.find('[data-type="calculate"]')

      $el.toggleClass('action--active')
      $row.toggleClass('table__row--primary-alpha-05')
      $calculate.toggleClass('action--disabled')

      if ($el.hasClass('action--active')) {
        if ($(`[data-dropdown="${$id}"]`).length) {
          $(`[data-dropdown="${$id}"]`).show()
        }
        else {
          const $line = $(`<div class="table__row table__row--primary-alpha-01 js-table-row" data-dropdown="${$id}">`)

          let html = `  <div class="table__cell js-table-cell">
                            <div class="table js-table js-table-group u-mb-16"></div>
                            <div class="table js-table js-table-bets"></div>
                        </div>`

          $line.html(html)
          $line.insertAfter($row)

          base.sendFormData(
            null,
            `${base.base}tickets/details/?id=${$id}`,
            'GET',
            (response) => {
              if (response) {
                table.drawHTML($line.find('.js-table-bets'), config_3, response.data[0].bets)

                $('.js-table-bets [data-cell="status"]').each(function () {
                  $(this).attr('data-value', $(this).html())
                  $(this).html(SETTINGS.STAKE_STATUSES[$(this).html()])
                })

                if (response.data[0].group.length > 0) {
                  table.drawHTML($line.find('.js-table-group'), config_2, response.data[0].group)
                } else {
                  $line.find('.js-table-group').remove()
                }
              }
            },
            null,
            {
              async: false
            },
            false
          )
        }
      } else {
        $(`[data-dropdown="${$id}"]`).hide()
      }
    }

    const actionCalculate = ($el, $row) => {
      $el.toggleClass('action--active')

      const $dropdown = $row.find('[data-type="dropdown"]')
      const ticket_status = $row.find('[data-cell="status"]')
      const stake_statuses = $row.next().find('.js-table [data-cell="status"]')
      const stake_results = $row.next().find('.js-table [data-cell="details.results"]')

      if ($el.hasClass('action--active')) {
        $dropdown.toggleClass('action--disabled')

        ticket_status.html(base.initSelect(null, SETTINGS.STAKE_STATUSES, ticket_status.attr('data-value')))
        stake_statuses.map(function (index, item) {
          $(item).html(base.initSelect(null, SETTINGS.TICKET_STATUSES, $(item).attr('data-value')))
        })

        $('.js-table .js-select-input').select2();

        stake_results.map(function (index, item) {
          $(item).html(base.initTextArea(null, $(item).text()))
        })
      }
      else {
        let select = $row.find('.js-select-input option:selected')
        ticket_status.attr('data-value', select.val())
        ticket_status.html(select.text())

        stake_statuses.map(function (index, item) {
          select = $(item).find('.js-select-input option:selected')

          $(item).attr('data-value', select.val())
          $(item).html(select.text())
        })

        stake_results.map(function (index, item) {
          $(item).html($(item).find('.js-textarea-input').val())
        })

        $dropdown.toggleClass('action--disabled')
      }
    }

    $('.js-form-tickets').on('submit', function(e) {
      e.preventDefault()
      handleSubmit()
    })

    $('.js-pagination-prev').on('click', function () {
      handleSubmit('prev')
    })

    $('.js-pagination-next').on('click', function () {
      handleSubmit('next')
    })

    $('.js-pagination-start').on('click', function () {
      handleSubmit('start')
    })

    $('.js-pagination-end').on('click', function () {
      handleSubmit('end')
    })

    $('[name="quantity"]').on('change', function() {
      table.navigation.quantity = Number($(this).val())
    })

    $('body').on('click', '[data-cell="username"]', function () {
      $('[name="username"]').val($(this).text())
    })

    $('body').on('click', '.js-ticket-print', function() {
      printJS({
        printable: 'js-ticket',
        type: 'html',
        documentTitle: null,
        css: './css/app.css',
      })
    })

    $('body').on('click', '.js-dialog-dismiss', function () {
      dialog.hide()
      dialog.clear()
    })

    $('body').on('click', '.js-dialog-accept', function () {
      dialog.accept(function() {
        base.sendFormData(
          null,
          `${base.base}tickets/cancel/?id=${dialog.params.id.text()}`,
          'GET',
          (response) => {
            if (response) {
              dialog.hide()

              if (response.data[0].code === '0') {
                dialog.params.status.text("CANCELLED")
                tostify(response.data[0].message, 'success').showToast()
              }
              else {
                tostify(response.data[0].error_message, 'error').showToast()
              }

              dialog.clear()
            }
          },
          null,
          {
            async: false
          },
          false
        )
      })
    })

    $('body').on('click', '.js-action', function () {
      const $type   = $(this).attr('data-type')
      const $row    = $(this).closest('.js-table-row')
      const $id     = $row.find('[data-cell="ticketId"]').text()

      if ($type === SETTINGS.TICKET_ACTIONS.CANCEL) {
        dialog.show(
          'Are you sure you want to cancel the stake?',
          {
            id:     $row.find('[data-cell="ticketId"]'),
            status: $row.find('[data-cell="status"]')
          }
        )
      }
      else if ($type === SETTINGS.TICKET_ACTIONS.CALCULATE) {
        actionCalculate($(this), $row)
      }
      else if($type === SETTINGS.TICKET_ACTIONS.PRINT) {
        base.sendFormData(
          null,
          `${base.base}tickets/details/?id=${$id}`,
          'GET',
          (response) => {
            if (response) {
              $('.js-paper-title').text('Print ticket')
              $('.js-paper-form').html(ticket.html(response.data[0], $row.find('[data-cell="username"]').text()))
              $('#aside').addClass('aside--active')
            }
          },
          null,
          {
            async: false
          },
          false
        )
      }
      else if($type === SETTINGS.TICKET_ACTIONS.DROPDOWN) {
        actionDropdown($(this), $id, $row)
      }
    })
